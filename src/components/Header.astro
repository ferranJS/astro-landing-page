---
import Logo from "../components/Logo.astro"
import { getLangFromUrl, useTranslations } from "../i18n/utils"

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)

const baseURL = import.meta.env.BASE_URL
---

<header
  class="fixed left-0 right-0 top-0 z-30 flex items-center justify-between py-5 text-sm transition duration-200"
>
  <div class="flex grow basis-0">
    <a href="#Section1" aria-label="Section1 button">
      <Logo Class="w-32 ml-12" />
    </a>
  </div>
  <div
    class="pointer-events-none fixed -z-10 h-[var(--height)] w-[var(--width)] translate-x-[var(--left)] rounded-md bg-zinc-500/10 opacity-0 backdrop-blur-md ease-in-out"
    id="button-hover"
  >
  </div>
  <nav class="hidden xl:inline">
    <ul class="flex">
      <li>
        <a href="#Model3" class="z-30 rounded-md px-3 py-2">{t("Model 3")}</a>
      </li>
      <li>
        <a href="#ModelX" class="z-30 rounded-md px-3 py-2">{t("Model X")}</a>
      </li>
      <li>
        <a href="#ModelY" class="z-30 rounded-md px-3 py-2">{t("Model Y")}</a>
      </li>
      <li>
        <a href="#SolarPanels" class="z-30 rounded-md px-3 py-2">{t("Solar Panels")}</a>
      </li>
      <li>
        <a href="#Accessories" class="z-30 rounded-md px-3 py-2">{t("Accessories")}</a>
      </li>
    </ul>
  </nav>
  <nav class="mr-8 hidden grow basis-0 justify-end xl:flex">
    <ul class="flex">
      <li>
        <a href={"https://github.com/ferranJS"+baseURL} class="z-30 rounded-md px-3 py-2"
          >{t("Support")}</a
        >
      </li>
      <li>
        <a href="https://github.com/ferranJS" class="z-30 rounded-md px-3 py-2">{t("Shop")}</a>
      </li>
      <li>
        <a href={"https://github.com/ferranJS"+baseURL} class="z-30 rounded-md px-3 py-2"
          >{t("Account")}</a
        >
      </li>
      <li>
        <a class="z-30 rounded-md px-3 py-2" onclick="openSideMenu()">{t("Menu")}</a>
      </li>
    </ul>
  </nav>
  <button
    class="mr-8 rounded-md bg-[#78789136] px-3 py-2 duration-200 hover:bg-zinc-400/75 xl:hidden"
    onclick="; openSideMenu()">Menu</button
  >
</header>

<script>
  const buttonHover = document.querySelector("#button-hover") as HTMLDivElement
  // movement between buttons
  document.querySelectorAll("header a.rounded-md").forEach(element => {
    element.addEventListener("mouseenter", e => {
      const rect = (e.target as HTMLElement).getBoundingClientRect()
      buttonHover!.style.setProperty("--left", rect.left + "px")
      buttonHover!.style.setProperty("--width", rect.width + "px")
      buttonHover!.style.setProperty("--height", rect.height + "px")
      setTimeout(() => {
        buttonHover!.classList.add("duration-500")
        buttonHover!.classList.remove("opacity-0")
      }, 10)
    })
    element.addEventListener("mouseleave", e => {
      buttonHover!.classList.add("opacity-0")
    })
  }) // no hover
  document.querySelectorAll("header").forEach(element =>
    element.addEventListener("mouseleave", e => {
      buttonHover!.classList.remove("duration-500")
    })
  )

  // in order to control it depending on the section, querySelectorAll.forEach could be used
  const section = document.querySelector(".snap-center")

  function handleScroll() {
    if (!section) return false
    const rect = section.getBoundingClientRect()
    const header = document.querySelector("header")
    if (rect.bottom >= 10) {
      header!.classList.remove("text-[#090901]")
    } else {
      header!.classList.add("text-[#090901]")
    }
  }

  document.querySelector("main")?.addEventListener("scroll", () => {
    clearTimeout((window as any).scrollTimer)
    ;(window as any).scrollTimer = setTimeout(handleScroll, 50)
  })
</script>
